/*
 * This file is generated by jOOQ.
*/
package com.example.jooq_dsl.tables;


import com.example.jooq_dsl.Public;
import com.example.jooq_dsl.tables.records.LoanDataRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LoanData extends TableImpl<LoanDataRecord> {

    private static final long serialVersionUID = 2065214238;

    /**
     * The reference instance of <code>PUBLIC.LOAN_DATA</code>
     */
    public static final LoanData LOAN_DATA = new LoanData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LoanDataRecord> getRecordType() {
        return LoanDataRecord.class;
    }

    /**
     * The column <code>PUBLIC.LOAN_DATA.LISTING_KEY</code>.
     */
    public final TableField<LoanDataRecord, UUID> LISTING_KEY = createField("LISTING_KEY", org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.LISTING_NUMBER</code>.
     */
    public final TableField<LoanDataRecord, Integer> LISTING_NUMBER = createField("LISTING_NUMBER", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.LISTING_CREATION_DATE</code>.
     */
    public final TableField<LoanDataRecord, Timestamp> LISTING_CREATION_DATE = createField("LISTING_CREATION_DATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.CAST(CREDITGRADE AS VARCHAR(2))</code>.
     */
    public final TableField<LoanDataRecord, String> CAST_28CREDITGRADE_AS_VARCHAR_282_29_29 = createField("CAST(CREDITGRADE AS VARCHAR(2))", org.jooq.impl.SQLDataType.VARCHAR(2), this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.TERM</code>.
     */
    public final TableField<LoanDataRecord, Short> TERM = createField("TERM", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.LOAN_STATUS</code>.
     */
    public final TableField<LoanDataRecord, String> LOAN_STATUS = createField("LOAN_STATUS", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.CLOSED_DATE</code>.
     */
    public final TableField<LoanDataRecord, Timestamp> CLOSED_DATE = createField("CLOSED_DATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.BORROWER_APR</code>.
     */
    public final TableField<LoanDataRecord, BigDecimal> BORROWER_APR = createField("BORROWER_APR", org.jooq.impl.SQLDataType.DECIMAL(65535, 32767), this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.BORROWER_RATE</code>.
     */
    public final TableField<LoanDataRecord, BigDecimal> BORROWER_RATE = createField("BORROWER_RATE", org.jooq.impl.SQLDataType.DECIMAL(65535, 32767), this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.LISTING_CATEGORY</code>.
     */
    public final TableField<LoanDataRecord, Short> LISTING_CATEGORY = createField("LISTING_CATEGORY", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.PROSPER_SCORE</code>.
     */
    public final TableField<LoanDataRecord, String> PROSPER_SCORE = createField("PROSPER_SCORE", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.BORROWER_STATE</code>.
     */
    public final TableField<LoanDataRecord, String> BORROWER_STATE = createField("BORROWER_STATE", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.OCCUPATION</code>.
     */
    public final TableField<LoanDataRecord, String> OCCUPATION = createField("OCCUPATION", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.EMPLOYMENT_STATUS</code>.
     */
    public final TableField<LoanDataRecord, String> EMPLOYMENT_STATUS = createField("EMPLOYMENT_STATUS", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.EMPLOYMENT_STATUS_DURATION</code>.
     */
    public final TableField<LoanDataRecord, Integer> EMPLOYMENT_STATUS_DURATION = createField("EMPLOYMENT_STATUS_DURATION", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.IS_BORROWER_HOMEOWNER</code>.
     */
    public final TableField<LoanDataRecord, Boolean> IS_BORROWER_HOMEOWNER = createField("IS_BORROWER_HOMEOWNER", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.CURRENTLY_IN_GROUP</code>.
     */
    public final TableField<LoanDataRecord, Boolean> CURRENTLY_IN_GROUP = createField("CURRENTLY_IN_GROUP", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.GROUP_KEY</code>.
     */
    public final TableField<LoanDataRecord, String> GROUP_KEY = createField("GROUP_KEY", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.DATE_CREDIT_PULLED</code>.
     */
    public final TableField<LoanDataRecord, Timestamp> DATE_CREDIT_PULLED = createField("DATE_CREDIT_PULLED", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.CREDIT_SCORE_RANGE_LOWER</code>.
     */
    public final TableField<LoanDataRecord, Integer> CREDIT_SCORE_RANGE_LOWER = createField("CREDIT_SCORE_RANGE_LOWER", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.CREDIT_SCORE_RANGE_UPPER</code>.
     */
    public final TableField<LoanDataRecord, Integer> CREDIT_SCORE_RANGE_UPPER = createField("CREDIT_SCORE_RANGE_UPPER", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.FIRST_RECORDED_CREDIT_LINE</code>.
     */
    public final TableField<LoanDataRecord, Timestamp> FIRST_RECORDED_CREDIT_LINE = createField("FIRST_RECORDED_CREDIT_LINE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.CURRENT_CREDIT_LINES</code>.
     */
    public final TableField<LoanDataRecord, Integer> CURRENT_CREDIT_LINES = createField("CURRENT_CREDIT_LINES", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.OPEN_CREDIT_LINES</code>.
     */
    public final TableField<LoanDataRecord, Integer> OPEN_CREDIT_LINES = createField("OPEN_CREDIT_LINES", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.TOTAL_CREDIT_LINES_PAST7YEARS</code>.
     */
    public final TableField<LoanDataRecord, BigDecimal> TOTAL_CREDIT_LINES_PAST7YEARS = createField("TOTAL_CREDIT_LINES_PAST7YEARS", org.jooq.impl.SQLDataType.DECIMAL(65535, 32767), this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.OPEN_REVOLVING_ACCOUNTS</code>.
     */
    public final TableField<LoanDataRecord, BigDecimal> OPEN_REVOLVING_ACCOUNTS = createField("OPEN_REVOLVING_ACCOUNTS", org.jooq.impl.SQLDataType.DECIMAL(65535, 32767), this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.OPEN_REVOLVING_MONTHLY_PAYMENT</code>.
     */
    public final TableField<LoanDataRecord, BigDecimal> OPEN_REVOLVING_MONTHLY_PAYMENT = createField("OPEN_REVOLVING_MONTHLY_PAYMENT", org.jooq.impl.SQLDataType.DECIMAL(65535, 32767), this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.INQUIRIES_LAST6MONTHS</code>.
     */
    public final TableField<LoanDataRecord, String> INQUIRIES_LAST6MONTHS = createField("INQUIRIES_LAST6MONTHS", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.TOTAL_INQUIRIES</code>.
     */
    public final TableField<LoanDataRecord, String> TOTAL_INQUIRIES = createField("TOTAL_INQUIRIES", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.CURRENT_DELINQUENCIES</code>.
     */
    public final TableField<LoanDataRecord, String> CURRENT_DELINQUENCIES = createField("CURRENT_DELINQUENCIES", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.AMOUNT_DELINQUENT</code>.
     */
    public final TableField<LoanDataRecord, String> AMOUNT_DELINQUENT = createField("AMOUNT_DELINQUENT", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>PUBLIC.LOAN_DATA.DELINQUENCIES_LAST7YEARS</code>.
     */
    public final TableField<LoanDataRecord, String> DELINQUENCIES_LAST7YEARS = createField("DELINQUENCIES_LAST7YEARS", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * Create a <code>PUBLIC.LOAN_DATA</code> table reference
     */
    public LoanData() {
        this(DSL.name("LOAN_DATA"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.LOAN_DATA</code> table reference
     */
    public LoanData(String alias) {
        this(DSL.name(alias), LOAN_DATA);
    }

    /**
     * Create an aliased <code>PUBLIC.LOAN_DATA</code> table reference
     */
    public LoanData(Name alias) {
        this(alias, LOAN_DATA);
    }

    private LoanData(Name alias, Table<LoanDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private LoanData(Name alias, Table<LoanDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LoanData as(String alias) {
        return new LoanData(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LoanData as(Name alias) {
        return new LoanData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LoanData rename(String name) {
        return new LoanData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LoanData rename(Name name) {
        return new LoanData(name, null);
    }
}
